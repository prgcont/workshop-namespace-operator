---
- name: Load Kubernetes server address
  k8s:
    state: present
    api_version: v1
    kind: ConfigMap
    namespace: "{{ main_namespace }}"
    name: kubernetes-server
  register: kubernetes_server

- name: Set namespace variables
  set_fact:
    user_namespace_name: "{{ meta.name }}"
    cluster_server: "{{ kubernetes_server.result.data.server }}"
    user_id: "{{ meta }}"

- name: Create Namespace
  k8s:
    state: present
    definition: "{{ lookup('template', item.name) | from_yaml }}"
  when: item.api_exists | default(True)
  loop:
    - name: namespace.yaml.j2
    - name: service-account.yaml.j2
    - name: rbac-rolebinding.yaml.j2

- name: Read ServiceAccounts
  k8s:
    state: present
    api_version: v1
    kind: ServiceAccount
    namespace: "{{ user_namespace_name }}"
    name: "{{ serviceaccount_name }}"
  register: sa_result

- name: Read Secret
  k8s:
    state: present
    api_version: v1
    kind: Secret
    namespace: "{{ user_namespace_name }}"
    name: "{{ sa_result.result.secrets[0].name }}"
  register: user_service_secret


- name: Set namespace variables
  set_fact:
    cluster_certificate_authority_data: "{{ user_service_secret.result.data['ca.crt'] }}"
    serviceaccount_token: "{{ user_service_secret.result.data.token | b64decode }}"

- name: Create Secret with kubeconfig
  k8s:
    state: present
    definition: "{{ lookup('template', 'kubeconfig.yaml.j2') | from_yaml }}"
