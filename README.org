* Workshop Namespace Operator

Kubernetes Operator for setting up Kubernetes Namespace and User for workshop sessions.

** Deploying operator to Kubernetes cluster

Register CRD:
#+begin_src bash 
kubectl apply -f ./deploy/crds/workshopnamespaces_v1alpha1_operator_crd.yaml
#+end_src

** Local testing

*** Prerequisites
- git
- docker version 17.03+.
- kubectl version v1.9.0+.
- ansible version v2.6.0+
- ansible-runner version v1.1.0+
- ansible-runner-http version v1.0.0+
- dep version v0.5.0+. (Optional if you aren't installing from source)
- go version v1.10+. (Optional if you aren't installing from source)
- Access to a Kubernetes v.1.9.0+ cluster.

See [[fro more ][official prerequisites]] for more details.

Register CRD:
#+begin_src bash 
kubectl apply -f ./deploy/crds/workshopnamespaces_v1alpha1_operator_crd.yaml
#+end_src

*** Getting Started

Start minikube cluster
#+begin_src bash
minikube start --kubernetes-version v1.12.4
#+end_src

Create CRD in k8s API
#+begin_src bash
kubectl apply -f deploy/crds/workshopnamespaces_v1alpha1_operator_crd.yaml
#+end_src

Update /watches.yaml/ ~role~ section to reflect path on your computer, e.g. ~/home/<USERNAME>/workshop-namespace-operator/roles/workshopnamespace~. 

Start Operator locally:
#+begin_src bash
# Either start runner directly
ansible-runner -vv --rotate-artifacts 1 --role workshopnamespace --roles-path ~/.go/src/github.com/prgcont/workshop-namespace-operator/roles/ --hosts localhost -i test run ./

# or using operator-sdk
operator-sdk up local
#+end_src

Create test CR: 

#+begin_src bash
kubectl apply -f ./deploy/crds/workshopnamespaces_v1alpha1_operator_cr.yaml
#+end_src

*** Deploy to k8s cluster

Publish container:
#+begin_src bash
operator-sdk build prgcont/workshop-namespace-operator:v0.0.1
docker push prgcont/workshop-namespace-operator:v0.0.1
#+end_src

Create CRD in target cluster:
#+begin_src bash
kubectl create -f deploy/crds/workshopnamespaces_v1alpha1_operator_crd.yaml
#+end_src

Create Operator 
#+begin_src bash
kubectl create -f deploy/role.yaml,deploy/role_binding.yaml,deploy/clusterrole_binding.yaml,deploy/service_account.yaml
# Update operator container image and deploy to cluster 
sed 's/{{ REPLACE_IMAGE }}/prgcont\/workshop-namespace-operator:v0.0.1/' deploy/operator.yaml | kubectl create -f -
#+end_src

Create test CR to verify if namespace is created:
#+begin_src bash
kubectl create -f deploy/crds/workshopnamespaces_v1alpha1_operator_cr.yaml

#+end_src

Verify that Namespace test-ns was created
#+begin_src bash
kubectl get ns

# Objects in namespace
kubectl -n test-ns get serviceaccount,rolebinding
# NAME               SECRETS   AGE
# sa/default         1         3d
# sa/test-ns-admin   1         3d

# NAME                        KIND                                       SUBJECTS
# rolebindings/test-nsadmin   RoleBinding.v1.rbac.authorization.k8s.io   1 item(s)
#+end_src

*** Cleanup cluster 
#+begin_src bash 
kubectl delete workshopnamespace $(kubectl get workshopnamespace -o jsonpath='{.items[*].metadata.name}')
kubectl delete -f deploy/role.yaml,deploy/role_binding.yaml,deploy/clusterrole_binding.yaml,deploy/service_account.yaml
kubectl delete deployment workshop-namespace-operator
kubectl delete -f deploy/crds/workshopnamespaces_v1alpha1_operator_crd.yaml
#+end_src
